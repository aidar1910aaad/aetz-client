'use client';

import { useEffect } from 'react';
import { useRouter } from 'next/navigation';
import type { ReactNode } from 'react';
import Header from '@/shared/layout/Header';
import Sidebar from '@/shared/layout/Sidebar';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ JWT —Ç–æ–∫–µ–Ω–∞
const analyzeToken = (token: string) => {
  try {
    const payload = JSON.parse(atob(token.split('.')[1]));
    const createdAt = new Date(payload.iat * 1000);
    const expiresAt = new Date(payload.exp * 1000);
    const now = new Date();

    const hoursUntilExpiry = (expiresAt.getTime() - now.getTime()) / (1000 * 60 * 60);
    const totalHours = (expiresAt.getTime() - createdAt.getTime()) / (1000 * 60 * 60);

    console.log('üîç –ê–Ω–∞–ª–∏–∑ JWT —Ç–æ–∫–µ–Ω–∞:');
    console.log('üìÖ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:', createdAt.toLocaleString());
    console.log('‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è:', expiresAt.toLocaleString());
    console.log('üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:', now.toLocaleString());
    console.log('‚è≥ –ß–∞—Å–æ–≤ –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è:', hoursUntilExpiry.toFixed(2));
    console.log('üìä –û–±—â–µ–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Ç–æ–∫–µ–Ω–∞ (—á–∞—Å–æ–≤):', totalHours.toFixed(2));
    console.log('üìã –ü–æ–ª–Ω—ã–π payload:', payload);

    return {
      createdAt,
      expiresAt,
      hoursUntilExpiry,
      totalHours,
      payload,
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç–æ–∫–µ–Ω–∞:', error);
    return null;
  }
};

export default function DashboardLayout({ children }: { children: ReactNode }) {
  const router = useRouter();

  useEffect(() => {
    const token = localStorage.getItem('token');

    if (!token) {
      router.push('/');
      return;
    }

    try {
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
      const tokenAnalysis = analyzeToken(token);

      if (!tokenAnalysis) {
        localStorage.removeItem('token');
        router.push('/');
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏–∑ JWT
      const isExpired = Date.now() > tokenAnalysis.expiresAt.getTime();

      if (isExpired) {
        console.log('‚ùå –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
        localStorage.removeItem('token');
        router.push('/');
      } else {
        console.log('‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');
      }
    } catch {
      localStorage.removeItem('token');
      router.push('/');
    }
  }, [router]);

  return (
    <div className="min-h-screen bg-gray-100 text-black flex flex-col">
      <Header />

      <div className="flex flex-1 overflow-hidden">
        <Sidebar />
        <main className="flex-1 overflow-y-auto p-6">{children}</main>
      </div>
    </div>
  );
}
